-- CRIAR TABELAS
CREATE TABLE USUARIO(
    ID NUMBER PRIMARY KEY,
    NOME VARCHAR2(100),
    EMAIL VARCHAR2(100),
    DATA_NASC DATE,
    GENERO VARCHAR2(25)
)

CREATE TABLE TAREFA(
    ID NUMBER PRIMARY KEY,
    USUARIO_ID NUMBER,
    DESCRICAO VARCHAR2(200),
    DATA_CRIACAO DATE,
    DATA_LIMITE DATE,
    TEMPO_ESTIMADO NUMBER,
    SITUACAO VARCHAR2(25),
    CONSTRAINT FK_TAREFA_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID)
)

CREATE TABLE RELATORIO(
    ID NUMBER PRIMARY KEY,
    EXECUTADOS NUMBER,
    PENDENTES NUMBER,
    PERCENTUAL_EXE VARCHAR2(50),
    USUARIO_ID NUMBER,
    CONSTRAINT FK_RELATORIO_USUARIO FOREIGN KEY (USUARIO_ID) REFERENCES USUARIO (ID)
)


-- TRIGGER DA TABELA USUARIO
CREATE SEQUENCE USUARIO_SEQ;
CREATE OR REPLACE TRIGGER USUARIO_TRIGGER
BEFORE INSERT ON USUARIO
FOR EACH ROW
BEGIN
    :NEW.ID := USUARIO_SEQ.NEXTVAL;
    IF (:NEW.NOME IS NULL OR LENGTH(TRIM(:NEW.NOME)) = 0) or (:NEW.EMAIL IS NULL OR LENGTH(TRIM(:NEW.EMAIL)) = 0)
        THEN 
            :NEW.NOME := 'ANONIMO';
            :NEW.EMAIL := 'ANONIMO@MEIL';
            :NEW.DATA_NASC := SYSDATE;
            :NEW.GENERO := 'ANONIMO';
    ELSIF (:NEW.DATA_NASC IS NULL OR LENGTH(TRIM(:NEW.DATA_NASC)) = 0) OR (:NEW.GENERO IS NULL OR LENGTH(TRIM(:NEW.GENERO)) = 0)
        THEN
            :NEW.DATA_NASC := SYSDATE;
            :NEW.GENERO := 'ANONIMO';
    END IF;
END;


-- TRIGGER DA TABELA TAREFA
CREATE SEQUENCE TAREFA_SEQ
CREATE OR REPLACE TRIGGER TAREFA_TRIGGER
BEFORE INSERT ON TAREFA
FOR EACH ROW
BEGIN
    :NEW.ID := TAREFA_SEQ.NEXTVAL;
    IF :NEW.DESCRICAO IS NULL OR LENGTH(TRIM(:NEW.DESCRICAO)) = 0 
    THEN
        :NEW.USUARIO_ID := NULL;
    ELSIF :NEW.USUARIO_ID IS NULL OR LENGTH(TRIM(:NEW.USUARIO_ID)) = 0
    THEN
        :NEW.USUARIO_ID := 1;
    END IF;
END;


-- PROCEDURE DA TABELA RELATÓRIO
CREATE OR REPLACE PROCEDURE INSERIR_RELATORIO IS
BEGIN

  DELETE FROM RELATORIO;

  INSERT INTO RELATORIO (ID, EXECUTADOS, PENDENTES, PERCENTUAL_EXE, USUARIO_ID)
  SELECT
    ROWNUM,
    (SELECT COUNT(*) FROM TAREFA WHERE LOWER(SITUACAO) = LOWER('Concluída') AND USUARIO_ID = U.ID) AS EXECUTADOS,
    (SELECT COUNT(*) FROM TAREFA WHERE LOWER(SITUACAO) = LOWER('Pendente') AND USUARIO_ID = U.ID) AS PENDENTES,
    CASE
      WHEN (SELECT COUNT(*) FROM TAREFA WHERE USUARIO_ID = U.ID) > 0 THEN
        ROUND((SELECT COUNT(*) FROM TAREFA WHERE LOWER(SITUACAO) = LOWER('Concluída') AND USUARIO_ID = U.ID) / (SELECT COUNT(*) FROM TAREFA WHERE USUARIO_ID = U.ID) * 100, 2) || '%'
      ELSE
        '0%'
    END AS PERCENTUAL_EXE,
    U.ID AS USUARIO_ID
  FROM USUARIO U;

  COMMIT;

  DBMS_OUTPUT.PUT_LINE('Dados inseridos na tabela RELATORIO com sucesso.');
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Erro ao inserir dados na tabela RELATORIO: ' || SQLERRM);
    ROLLBACK;
END;


-- USANDO RECURSO DA ORACLE PARA CHAMAR A PROCEDURE DIARIAMENTE
BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
    job_name        => 'INSERIR_RELATORIO_JOB',
    job_type        => 'PLSQL_BLOCK',
    job_action      => 'BEGIN INSERIR_RELATORIO; END;',
    start_date      => SYSTIMESTAMP,
    repeat_interval => 'FREQ=DAILY; BYHOUR=0; BYMINUTE=1; BYSECOND=0;',
    enabled         => TRUE);
END;


-- INSERÇÃO DE NOVOS USUÁRIO
INSERT INTO "USUARIO"
(NOME, EMAIL, DATA_NASC, GENERO)
VALUES
('', '', SYSDATE, '')
SELECT * FROM "USUARIO"


-- INSERÇÃO DE NOVAS TAREFAS
INSERT INTO TAREFA
(USUARIO_ID, DESCRICAO, DATA_CRIACAO, DATA_LIMITE, TEMPO_ESTIMADO, SITUACAO)
VALUES
((SELECT ID FROM USUARIO WHERE NOME = ''), 'Codar', sysdate, sysdate+7, 2, 'pendente')
SELECT * FROM TAREFA